{"version":3,"sources":["Components/Navbar.js","Components/TextUtilies.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","placeholder","TextUtilies","useState","text","setText","heading","onChange","event","target","value","rows","disabled","length","onClick","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b2ca3625.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg sticky-top navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n        {props.title}\r\n        </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          \r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {/* nav ka items */}\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/TextUtilies\">TextUtilies</a>\r\n            </li> */}\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">Contract Us</a>\r\n            </li> */}\r\n          </ul>\r\n\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>\r\n          \r\n        </div>\r\n      </div>\r\n    </nav>\r\n    </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:'Aruma films'\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextUtilies(props) {\r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied Text!\", \"success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed Extra Space!\", \"success\");\r\n    }\r\n    const handleClear=()=>\r\n    {\r\n        setText(\"\")\r\n        props.showAlert(\"Cleared!\", \"success\");\r\n    }\r\n\r\n    const [text,setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" onChange={handleOnChange} id=\"myBox\" value={text} rows=\"7\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleClear}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h3>Your Text Summary</h3>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h4>Preview</h4>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n        }\r\n        \r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport React,{useState} from 'react'\nimport Navbar from './Components/Navbar'\nimport TextUtilies from './Components/TextUtilies';\nimport Alert from './Components/Alert';\n\nfunction App() {\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type)=>{\n    setAlert({\n        msg: message,\n        type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n}\n    \n  return (\n    <>\n      <Navbar title=\"Aruma Films\"/>\n      <Alert  alert= {alert}/>\n      <div className=\"container\">\n        <TextUtilies heading=\"Enter the text\" showAlert={showAlert}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}